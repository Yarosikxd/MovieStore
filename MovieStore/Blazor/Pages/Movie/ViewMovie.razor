@page "/ViewMovie/{Id}"
@using Domain.Models
@using System.Linq
@using Application.Service.MovieService

<h3>View Movie</h3>
<hr />

@if (Movie != null)
{
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="Id" class="control-label">Movie Number</label>
                <input class="form-control" @bind="Movie.Id" readonly />
            </div>
            <div class="form-group">
                <label for="Image" class="control-label">Image</label>
                <img src="@Movie.ImageURL" alt="Image Movie" width="100" height="100" />
            </div>
            <div class="form-group">
                <label for="Description" class="control-label">Description</label>
                <p>@Movie.Description</p>
            </div>
            <div class="form-group">
                <label for="Name" class="control-label">Name</label>
                <p>@Movie.Name</p>
            </div>
            <div class="form-group">
                <label for="Price" class="control-label">Price</label>
                <p>@Movie.Price</p>
            </div>
            <div class="form-group">
                <label for="StartDate" class="control-label">Start Date</label>
                <p>@Movie.StarttDate.ToString("yyyy-MM-dd")</p>
            </div>
            <div class="form-group">
                <label for="EndDate" class="control-label">End Date</label>
                <p>@Movie.EndDate.ToString("yyyy-MM-dd")</p>
            </div>
            <div class="form-group">
                <label for="MovieCategory" class="control-label">Movie Category</label>
                <p>@Movie.MovieCategory</p>
            </div>

           
                <div class="form-group">
                    <label class="control-label">Cinema</label>
                    <p>@Movie.Cinema.Name</p>
                </div>
            

           
                <div class="form-group">
                    <label class="control-label">Producer</label>
                    <p>@Movie.Producer.FullName</p>
                </div>
            

            <div class="form-group">
                <label class="control-label">Status</label>
                <p>
                    @if (DateTime.Now >= Movie.StarttDate && DateTime.Now <= Movie.EndDate)
                    {
                        <span class="badge bg-success text-white">AVAILABLE</span>
                    }
                    else if (DateTime.Now > Movie.EndDate)
                    {
                        <span class="badge bg-danger text-white">EXPIRED</span>
                    }
                    else
                    {
                        <span class="badge bg-primary text-white">UPCOMING</span>
                    }
                </p>
            </div>

            @if (Movie.Actors_Movies != null && Movie.Actors_Movies.Any())
            {
                <div class="form-group">
                    <label class="control-label">Actors</label>
                    <hr />
                    <div class="row">
                        @foreach (var actorMovie in Movie.Actors_Movies)
                        {
                            <div class="column text-center">
                                <img class="border-info rounded-circle" src="@actorMovie.Actor.ProfilePictureURL" style="max-width: 150px" />
                                <br />
                                <p>@actorMovie.Actor.FullName</p>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <button class="btn btn-primary btn-sm" @onclick="HideMovieAsync">Hide Movie</button>
            </div>
        </div>
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public string Id { get; set; }

    Movie Movie { get; set; }

    [Inject]
    MovieService movieService { get; set; }

    [Inject]
    NavigationManager NavigationManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Movie = await movieService.GetMovieByIdAsync(Convert.ToInt32(Id));
    }

    protected void HideMovieAsync()
    {
        NavigationManager.NavigateTo("/Movies");
    }
}
